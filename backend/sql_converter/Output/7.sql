CREATE OR REPLACE PROCEDURE DG_I_P_30INF_CBCI.PROC_UPDATE_REPORTING_ENTITIES_NAME(IN par_COG_RUN_ID INTEGER, IN par_ETL_RUN_ID INTEGER, IN par_PROC_NR INTEGER, IN par_TABLE_NAME VARCHAR(40), OUT par_Status INTEGER) 
 LANGUAGE SQL
 BEGIN 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 DECLARE par_ZERO_ROWS, par_ACT_UPD, par_MIS_REP, par_STEP, par_ETL_RUN_MAX INTEGER DEFAULT 0; 
 
 DECLARE par_SQLSTATE CHARACTER(5); 
 DECLARE par_SQLMSG VARCHAR(118); 
 
 DECLARE par_TIN, SEI VARCHAR(50); 
 DECLARE TC VARCHAR(2); 
 DECLARE RETI VARCHAR(100); 
 DECLARE DRI, CDRI VARCHAR(250); 
 DECLARE ERI INTEGER;
     DECLARE done INT DEFAULT 0; 
 DECLARE STMT1, STMT2 VARCHAR(3000); 
 DECLARE cur_UPDATE CURSOR FOR S1; 
 
 
 
 DECLARE EXIT HANDLER FOR SqlException 
 BEGIN 
 
 
 
 
 
 
 GET DIAGNOSTICS EXCEPTION 1 par_SQLMSG = MESSAGE_TEXT; 
 
 
 ROLLBACK; 
 
 
 UPDATE DG_I_P_30INF_CBCI.RUNCONTROL_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = Coalesce(RUN_COMMENT, '') || 'SQLEXCEPTION after step ' || Trim(par_STEP) || ': ' || par_SQLMSG || '; ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_UPDATE_REPORTING_ENTITIES_NAME'; 
 
 SET par_STATUS = 1; 
 
 END; 
 
 
 DECLARE EXIT HANDLER FOR SQLWARNING 
 BEGIN 
 
 
 SET par_SQLSTATE = SqlState; 
 
 
 ROLLBACK; 
 
 
 UPDATE DG_I_P_30INF_CBCI.RUNCONTROL_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = Coalesce(RUN_COMMENT, '') || 'SQLWARNING sqlstate: ' || par_SQLSTATE || ' after step ' || Trim(par_STEP) || '; ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_UPDATE_REPORTING_ENTITIES_NAME'; 
 
 SET par_STATUS = 1; 
 
 END; 
 
 
 
 
 
 
 
 INSERT INTO DG_I_P_30INF_CBCI.RUNCONTROL_30 (COG_RUN_ID, PROCEDURE_NUMBER, PROCEDURE_NAME, START_DATE) 
 VALUES (par_COG_RUN_ID, par_PROC_NR, 'PROC_UPDATE_REPORTING_ENTITIES_NAME', CURRENT TIMESTAMP); 
 
 IF par_TABLE_NAME NOT IN ('REPORTING_ENTITY', 'CBCREPORTS_SUMMARY', 'CBCREPORTS_CONST_ENTITIES', 'ADDITIONAL_INFO') 
 THEN 
 
 
 
 UPDATE DG_I_P_30INF_CBCI.RUNCONTROL_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = 'Table name provided as IN parameter is not accepted: ' || par_TABLE_NAME || '. ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_UPDATE_REPORTING_ENTITIES_NAME'; 
 
 SET par_STATUS = 1; 
 SET par_STEP = 1; 
 
 ELSE 
 
 
 IF par_TABLE_NAME = 'REPORTING_ENTITY' 
 THEN 
 SET par_TIN = 'TIN'; 
 ELSE 
 SET par_TIN = 'REPORTINGENTITYTIN'; 
 END IF; 
 
 
 
 SET STMT1 = 'SELECT MAX(ETL_RUN_ID)
											FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || '
											WHERE RE_NAME_KEY IS NULL
											AND TRANSMITTINGCOUNTRY <> ''NL''
											AND ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || ';'; 
 
 
 PREPARE S1 FROM STMT1; 
 OPEN cur_UPDATE; 
 FETCH cur_UPDATE INTO par_ETL_RUN_MAX; 
 CLOSE cur_UPDATE; 
 
 SET par_STEP = 2; 
 
 
 
 
 
 
 
 
 SET STMT1 = 'UPDATE T
										FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS T,
										(SELECT MS.SENDINGENTITYIN
											, MS.TRANSMITTINGCOUNTRY
											, MS.MESSAGEREFID
											, MS.REPORTINGPERIOD
											, MS.X_ONTVANGSTDATUMTIJD
											, RE.CBCBODYID
											, RE.TIN
											, RN.NAME
											, RN.VOLGNR_COG
											, MS.ETL_RUN_ID
											, RANK() OVER (PARTITION BY MS.TRANSMITTINGCOUNTRY, RE.TIN, RN.NAME, EXTRACT (YEAR FROM MS.REPORTINGPERIOD) ORDER BY MS.REPORTINGPERIOD) AS REP_RANK
											FROM DG_I_P_30INF_CBCI.MESSAGE_SPEC AS MS
											INNER JOIN DG_I_P_30INF_CBCI.REPORTING_ENTITY AS RE
												ON MS.MESSAGEREFID = RE.MESSAGEREFID
												AND COALESCE(MS.SENDINGENTITYIN, '''') = COALESCE(RE.SENDINGENTITYIN, '''')
												AND MS.TRANSMITTINGCOUNTRY = RE.TRANSMITTINGCOUNTRY
												AND MS.ETL_RUN_ID = RE.ETL_RUN_ID
											INNER JOIN DG_I_P_30INF_CBCI.REPORTING_ENTITY_NAME AS RN
												ON RE.TIN = RN.REPORTINGENTITYTIN
												AND RE.CBCBODYID = RN.CBCBODYID
												AND RE.ETL_RUN_ID = RN.ETL_RUN_ID
											WHERE RE.DOCTYPEINDIC = ''OECD1''
											AND MS.TRANSMITTINGCOUNTRY <> ''NL''
											AND RN.VOLGNR_COG = 1
											QUALIFY RANK() OVER (PARTITION BY MS.TRANSMITTINGCOUNTRY, RE.TIN, RN.NAME, MS.REPORTINGPERIOD ORDER BY MS.X_ONTVANGSTDATUMTIJD, RN.VOLGNR_COG) = 1
										) AS S
										SET RE_NAME_KEY = CASE
																							WHEN S.REP_RANK > 1 THEN S.NAME || '' - '' || CAST((S.REP_RANK -1) AS VARCHAR(2))
																							ELSE S.NAME
																						END
										WHERE T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
										AND T.MESSAGEREFID = S.MESSAGEREFID
										AND T.CBCBODYID = S.CBCBODYID
										AND T.ETL_RUN_ID = S.ETL_RUN_ID
										AND T.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || '
										AND T.RE_NAME_KEY IS NULL;'; 
 
 EXECUTE IMMEDIATE STMT1; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 3; 
 
 
 
 
 
 
 
 
 IF par_TABLE_NAME <> 'REPORTING_ENTITY' 
 THEN 
 
 SET STMT1 = 'UPDATE T
											FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS T,
											(
												SELECT RE.SENDINGENTITYIN
												, RE.TRANSMITTINGCOUNTRY
												, RE.MESSAGEREFID
												, RE.CBCBODYID
												, RE.TIN
												, RN.NAME
												, RN.VOLGNR
												, RE.ETL_RUN_ID
												FROM DG_I_P_20GEG_CBCI.REPORTING_ENTITY AS RE
												INNER JOIN DG_I_P_20GEG_CBCI.REPORTING_ENTITY_NAME AS RN
													ON RE.TIN = RN.REPORTINGENTITYTIN
													AND RE.CBCBODYID = RN.CBCBODYID
													AND RE.ETL_RUN_ID = RN.ETL_RUN_ID
												WHERE RE.DOCTYPEINDIC = ''OECD0''
												AND RE.TRANSMITTINGCOUNTRY <> ''NL''
												AND RE.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || '
												QUALIFY RANK() OVER (PARTITION BY RE.TRANSMITTINGCOUNTRY, RE.MESSAGEREFID, RE.TIN, RE.CBCBODYID, RE.ETL_RUN_ID ORDER BY RN.VOLGNR) = 1
											) AS S
											SET RE_NAME_KEY = S.NAME
											WHERE T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
											AND COALESCE(T.SENDINGENTITYIN, '''') = COALESCE(S.SENDINGENTITYIN, '''')
											AND T.MESSAGEREFID = S.MESSAGEREFID
											AND T.CBCBODYID = S.CBCBODYID
											AND T.ETL_RUN_ID = S.ETL_RUN_ID
											AND T.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || '
											AND T.RE_NAME_KEY IS NULL;'; 
 
 EXECUTE IMMEDIATE STMT1; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 4; 
 
 END IF; 
 
 
 
 SET STMT1 = 'SELECT COALESCE(COUNT(*),0)  AS Records
						FROM (
							SELECT DISTINCT S1.SENDINGENTITYIN, S1.TRANSMITTINGCOUNTRY, S1.' || par_TIN || ', S2.RE_NAME_KEY, S1.REPORTINGPERIOD, S1.DOCREFID, S1.CORRDOCREFID, S1.ETL_RUN_ID
							FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS S1
							LEFT OUTER JOIN DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS S2
								ON S1.CORRDOCREFID = S2.DOCREFID
								AND COALESCE(S1.SENDINGENTITYIN, '''')  = COALESCE(S2.SENDINGENTITYIN, '''')
								AND S1.TRANSMITTINGCOUNTRY = S2.TRANSMITTINGCOUNTRY
								AND S1.ETL_RUN_ID >= S2.ETL_RUN_ID
							WHERE S1.RE_NAME_KEY IS NULL
							AND S2.RE_NAME_KEY IS NULL
							AND S1.TRANSMITTINGCOUNTRY <> ''NL''
							AND S1.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || '
						) AS A;'; 
 
 SET par_STEP = 5; 
 
 
 PREPARE S1 FROM STMT1; 
 OPEN cur_UPDATE; 
 FETCH cur_UPDATE INTO par_MIS_REP; 
 CLOSE cur_UPDATE; 
 
 IF par_MIS_REP > 0 THEN 
 
 BEGIN 
 
 
 
 
 SET STMT1 = 'SELECT DISTINCT T.SENDINGENTITYIN
				, T.TRANSMITTINGCOUNTRY
				, T.' || par_TIN || '
				, T.DOCREFID
				, T.CORRDOCREFID
				, T.ETL_RUN_ID
				FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS T
				WHERE T.RE_NAME_KEY IS NULL
				AND T.TRANSMITTINGCOUNTRY <> ''NL''
				AND T.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || '
				ORDER BY T.ETL_RUN_ID, T.START_DATE, T.CBCBODYID;'; 
 
 
 SET par_STEP = 6; 
 
 
 PREPARE S1 FROM STMT1; 
 
 
 OPEN cur_UPDATE; 
 
 
 
 
 FETCH cur_UPDATE INTO SEI, TC, RETI, DRI, CDRI, ERI; 
 
 
 
 
 SET STMT2 = 'UPDATE T
					FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS T,
					(SELECT DISTINCT SENDINGENTITYIN, TRANSMITTINGCOUNTRY, ' || par_TIN || ', RE_NAME_KEY, DOCREFID, CORRDOCREFID, ETL_RUN_ID
						FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || '
						WHERE TRANSMITTINGCOUNTRY = ''' || TC || '''
						AND ' || par_TIN || ' = ''' || RETI || '''
						AND DOCREFID = ''' || CDRI || '''
						AND ETL_RUN_ID <= ' || Trim(Cast(ERI AS VARCHAR(19))) || ') AS S
					SET RE_NAME_KEY = S.RE_NAME_KEY
					WHERE T.DOCREFID = ''' || DRI || '''
					AND COALESCE(T.SENDINGENTITYIN, '''')  = COALESCE(S.SENDINGENTITYIN, '''')
					AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
					AND T.' || par_TIN || ' = S.' || par_TIN || '
					AND T.ETL_RUN_ID = ' || Trim(Cast(ERI AS VARCHAR(19))) || '
					AND T.RE_NAME_KEY IS NULL;'; 
 
 EXECUTE IMMEDIATE STMT2; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 7; 
 
 
 
 CLOSE cur_UPDATE; 
 
 END; 
 ELSE 
 
 BEGIN 
 
 
 SET STMT2 = 'UPDATE T
						FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS T,
						(SELECT DISTINCT S1.SENDINGENTITYIN, S1.TRANSMITTINGCOUNTRY, 
								S1.' || par_TIN || ' AS TIN,
								S2.RE_NAME_KEY, S1.DOCREFID, S1.CORRDOCREFID, S1.ETL_RUN_ID
							FROM DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS S1
							LEFT OUTER JOIN DG_I_P_30INF_CBCI.' || par_TABLE_NAME || ' AS S2
								ON S1.CORRDOCREFID = S2.DOCREFID
								AND COALESCE(S1.SENDINGENTITYIN, '''')  = COALESCE(S2.SENDINGENTITYIN, '''')
								AND S1.TRANSMITTINGCOUNTRY = S2.TRANSMITTINGCOUNTRY
								AND S1.ETL_RUN_ID >= S2.ETL_RUN_ID
							WHERE S1.RE_NAME_KEY IS NULL
							AND S1.TRANSMITTINGCOUNTRY <> ''NL''
							AND S1.ETL_RUN_ID > ' || Trim(Cast(par_ETL_RUN_ID AS VARCHAR(19))) || ' ) AS S
						SET RE_NAME_KEY = S.RE_NAME_KEY
						WHERE T.DOCREFID = S.DOCREFID
						AND COALESCE(T.CORRDOCREFID, ''x'')  = COALESCE(S.CORRDOCREFID, ''x'')
						AND COALESCE(T.SENDINGENTITYIN, '''')  = COALESCE(S.SENDINGENTITYIN, '''')
						AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
						AND T.ETL_RUN_ID = S.ETL_RUN_ID;'; 
 
 EXECUTE IMMEDIATE STMT2; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 8; 
 
 END; 
 END IF; 
 
 
 
 
 
 
 UPDATE DG_I_P_30INF_CBCI.RUNCONTROL_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'Success' 
 , RUN_COMMENT = Coalesce(RUN_COMMENT, '') || Trim(Cast(par_ACT_UPD - par_ZERO_ROWS AS VARCHAR(11))) || ' records updated.' 
 , ETL_RUN_ID_INT = par_ETL_RUN_MAX 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_UPDATE_REPORTING_ENTITIES_NAME'; 
 
 SET par_STATUS = 0; 
 
 END IF; 
 
 END@
