REPLACE PROCEDURE DG_I_O_40ANA_CBC.PROC_PROCESS_DELTAS_NAT(
	IN par_COG_RUN_ID INTEGER
	, IN par_ETL_RUN_ID INTEGER
	, IN par_PROC_NR INTEGER
	, OUT par_STATUS INTEGER)

BEGIN
	
	
	DECLARE par_ZERO_ROWS, par_MAX_ETL_RUN_ID, par_ACT_INS, par_ACT_UPD, par_STEP, par_ERI_PROC, par_ERI_PROC_MS INTEGER DEFAULT 0;
	DECLARE par_SQLSTATE CHARACTER(5);
	DECLARE par_SQLMSG VARCHAR(118) CHARACTER SET Unicode;

	DECLARE EXIT HANDLER FOR SqlException
	BEGIN

		GET DIAGNOSTICS EXCEPTION 1 par_SQLMSG = Message_Text;

		ROLLBACK;		
		
		UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30
		SET END_DATE =  Current_Timestamp
		, RUN_RESULT = 'ERROR'
		, RUN_COMMENT = Coalesce(RUN_COMMENT, '') || 'SQLEXCEPTION after step ' || Trim(par_STEP) || ': ' || par_SQLMSG || '; '					-- Versie 5
		, ETL_RUN_ID_NAT = 0
		WHERE COG_RUN_ID = par_COG_RUN_ID
		AND PROCEDURE_NUMBER = par_PROC_NR
		AND PROCEDURE_NAME = 'PROC_PROCESS_DELTAS_NAT';
		
		SET par_STATUS = 1;

	END;

	DECLARE EXIT HANDLER FOR SQLWARNING
	BEGIN

		SELECT SqlState INTO par_SQLSTATE;

		ROLLBACK;		
		
		UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30
		SET END_DATE =  Current_Timestamp
		, RUN_RESULT = 'ERROR'
		, RUN_COMMENT = Coalesce(RUN_COMMENT, '') || 'SQLWARNING sqlstate: ' || par_SQLSTATE || ' after step ' || Trim(par_STEP) || '; '
		, ETL_RUN_ID_NAT = 0
		WHERE COG_RUN_ID = par_COG_RUN_ID
		AND PROCEDURE_NUMBER = par_PROC_NR
		AND PROCEDURE_NAME = 'PROC_PROCESS_DELTAS_NAT';
		
		SET par_STATUS = 1;
		
	END;
	

	DECLARE CONTINUE HANDLER FOR SqlState '02000'
	BEGIN

		SET par_ZERO_ROWS = par_ZERO_ROWS  + 1;
		
		UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30
		SET RUN_COMMENT = ' 0 rows updated for ' || Cast(par_ZERO_ROWS AS VARCHAR(2)) || ' queries; '
		WHERE COG_RUN_ID = par_COG_RUN_ID
		AND PROCEDURE_NUMBER = par_PROC_NR
		AND PROCEDURE_NAME = 'PROC_PROCESS_DELTAS_NAT';
	END;
	
	DECLARE EXIT HANDLER FOR NOT FOUND
	BEGIN
	

		SELECT SqlState INTO par_SQLSTATE;

		ROLLBACK;		
		
		UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30
		SET END_DATE =  Current_Timestamp
		, RUN_RESULT = 'ERROR'
		, RUN_COMMENT = Coalesce(RUN_COMMENT, '') || 'SQL NOT FOUND sqlstate: ' || par_SQLSTATE || ' after step ' || Trim(par_STEP) || '; '
		, ETL_RUN_ID_NAT = 0
		WHERE COG_RUN_ID = par_COG_RUN_ID
		AND PROCEDURE_NUMBER = par_PROC_NR
		AND PROCEDURE_NAME = 'PROC_PROCESS_DELTAS_NAT';
		
		SET par_STATUS = 1;
				
	END;

	INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 (COG_RUN_ID, PROCEDURE_NUMBER, PROCEDURE_NAME, START_DATE)
	VALUES (par_COG_RUN_ID, par_PROC_NR, 'PROC_PROCESS_DELTAS_NAT', Current_Timestamp);
	

	SELECT Coalesce(Max(ETL_RUN_ID),0) INTO par_ERI_PROC_MS
	FROM DG_I_O_40ANA_CBC.DpCBCD_msg_spec
	WHERE TRANSMITTINGCOUNTRY = 'NL';
	

	IF par_ETL_RUN_ID < par_ERI_PROC_MS THEN 
		SET par_ERI_PROC = par_ERI_PROC_MS; 
	ELSE 
		SET par_ERI_PROC = par_ETL_RUN_ID;
	END IF;
	
	

	BEGIN

		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_msg_spec("SENDINGENTITYIN", "SENDINGENTITYNAME", "TRANSMITTINGCOUNTRY",					-- GOUDVIS
			"MESSAGETYPE", "LANGUAGE", "WARNING", "CONTACT", "EULOCALFILING", "EUINCOMPLETE", "MESSAGEREFID", "MESSAGETYPEINDIC",
			"REPORTINGPERIOD", "REPORTINGPERIODBEGIN", "TIMESTAMP", "RELNR", "USEDSOFTWAREPACKAGE", "X_BERICHTID", "X_ONTVANGSTDATUMTIJD", "ETL_RUN_ID",
			"ETL_STG_TIMESTAMP", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT M."SENDINGENTITYIN"
			, M."SENDINGENTITYNAME"
			, M."TRANSMITTINGCOUNTRY"
			, M."MESSAGETYPE"
			, M."LANGUAGE"
			, M."WARNING"
			, M."CONTACT"
			, M."EULOCALFILING"
			, M."EUINCOMPLETE"
			, M."MESSAGEREFID"
			, M."MESSAGETYPEINDIC"
			, M."REPORTINGPERIOD"
			, M."REPORTINGPERIODBEGIN"
			, M."TIMESTAMP"
			, M."RELNR"
			, M."USEDSOFTWAREPACKAGE"
			, M."X_BERICHTID"
			, M."X_ONTVANGSTDATUMTIJD"
			, M."ETL_RUN_ID"
			, M."ETL_STG_TIMESTAMP"
			, M.X_ONTVANGSTDATUMTIJD AS "START_DATE"				
			, NULL AS "END_DATE"
			, 'Y' AS "CURRENT_FLAG"
		FROM DG_I_O_40ANA_CBC.StCBCN_msg_spec AS M
		WHERE M.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = Activity_Count;
		SET par_STEP = 1;

		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_repo_ent("MESSAGEREFID", "SENDINGENTITYIN", "TRANSMITTINGCOUNTRY", REPORTINGPERIOD, 					-- GOUDVIS
			"CBCBODYID", "DOCTYPEINDIC", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "REPORTINGROLE", "ISSUEDBY",
			"TIN", "ETL_RUN_ID", "ETL_STG_TIMESTAMP", "CMG_TD_NEGEER_INDICATIE",
			"CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."MESSAGEREFID"
		, S."SENDINGENTITYIN"
		, S.TRANSMITTINGCOUNTRY
		, P.REPORTINGPERIOD
		, S."CBCBODYID"
		, S."DOCTYPEINDIC"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."REPORTINGROLE"
		, S."ISSUEDBY"
		, S."TIN"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P.X_ONTVANGSTDATUMTIJD AS "START_DATE"				
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P				
			ON S.MESSAGEREFID = P.MESSAGEREFID
			AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
			AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;				

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 2;

		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS T,				
		DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P							
		SET END_DATE = P.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'

		WHERE T.DOCREFID = S.CORRDOCREFID
		AND T.TIN = S.TIN

		AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
		AND T.ETL_RUN_ID <= S.ETL_RUN_ID				

		AND S.MESSAGEREFID = P.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, 'x') = Coalesce(P.SENDINGENTITYIN, 'x')
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.ETL_RUN_ID = P.ETL_RUN_ID

		AND S.ETL_RUN_ID > par_ETL_RUN_ID
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 3;


		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_repo_ent_in("REPORTINGENTITYTIN", "CBCBODYID", "DOCREFID", "CORRDOCREFID",					-- GOUDVIS
			"CORRMESSAGEREFID", "ISSUEDBY", "INTYPE", "IN", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."ISSUEDBY"
		, S."INTYPE"
		, S."IN"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_repo_ent_in AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P		
			ON S.REPORTINGENTITYTIN = P.TIN
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 4;

		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent_in AS T,
		DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'

		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY

		AND S.TIN = P.TIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID

		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID

		AND S.ETL_RUN_ID > par_ETL_RUN_ID
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 5;


		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_repo_ent_name("REPORTINGENTITYTIN", "CBCBODYID", "DOCREFID", "CORRDOCREFID",					-- GOUDVIS
			"CORRMESSAGEREFID", "NAME", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."NAME"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR)AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_repo_ent_name AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P		-- Hoofdtabel van Reporting Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON S.REPORTINGENTITYTIN = P.TIN
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 6;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent_NAME AS T,
		DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TIN = P.TIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 7;

		--------------------------------------------------------------------------------------------------------------------------

		-- REPORTING_ENTITY_ADDRESS
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_repo_ent_adrs ("REPORTINGENTITYTIN", "CBCBODYID", "DOCREFID", "CORRDOCREFID",					-- GOUDVIS
			"CORRMESSAGEREFID", "LEGALADDRESSTYPE", "COUNTRYCODE", "ADDRESSFREE", "STREET", "BUILDINGIDENTIFIER", "SUITEIDENTIFIER", "FLOORIDENTIFIER",
				"DISTRICTNAME", "POB", "POSTCODE", "CITY", "COUNTRYSUBENTITY", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."LEGALADDRESSTYPE"
		, S."COUNTRYCODE"
		, S."ADDRESSFREE"
		, S."STREET"
		, S."BUILDINGIDENTIFIER"
		, S."SUITEIDENTIFIER"
		, S."FLOORIDENTIFIER"
		, S."DISTRICTNAME"
		, S."POB"
		, S."POSTCODE"
		, S."CITY"
		, S."COUNTRYSUBENTITY"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_repo_ent_adrs AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P		-- Hoofdtabel van Reporting Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON S.REPORTINGENTITYTIN = P.TIN
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 8;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent_adrs AS T,
		DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TIN = P.TIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 9;

		-------------------------------------------------------------------------------------------------------------------------

		-- REPORTING_ENTITY_RES_COUNTRY
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_repo_ent_res_cntry ("REPORTINGENTITYTIN", "CBCBODYID", "DOCREFID", "CORRDOCREFID",					-- GOUDVIS
			"CORRMESSAGEREFID",  "RESCOUNTRYCODE", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."RESCOUNTRYCODE"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_repo_ent_res_cntry AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P		-- Hoofdtabel van Reporting Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON S.REPORTINGENTITYTIN = P.TIN
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 10;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent_res_cntry AS T,
		DG_I_O_40ANA_CBC.StCBCN_repo_ent AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TIN = P.TIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 11;

		--------------------------------------------------------------------------------------------------------------------------

		-- CBCREPORTS_SUMMARY
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_sum("MESSAGEREFID", "SENDINGENTITYIN", "TRANSMITTINGCOUNTRY", REPORTINGPERIOD, "REPORTINGENTITYTIN", 					-- GOUDVIS
				"CBCBODYID", "CBCREPORTID", "DOCTYPEINDIC", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "RESCOUNTRYCODE",
				"PROFITORLOSSCURRCODE", "PROFITORLOSS", "TAXPAIDCURRCODE", "TAXPAID", "TAXACCRUEDCURRCODE", "TAXACCRUED", "CAPITALCURRCODE",
				"CAPITAL", "EARNINGSCURRCODE", "EARNINGS", "NBEMPLOYEES", "ASSETSCURRCODE", "ASSETS", "UNRELATEDCURRCODE", "UNRELATED",
				"RELATEDCURRCODE", "RELATED", "TOTALCURRCODE", "TOTAL", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
				"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG" )
		SELECT S."MESSAGEREFID"
		, S."SENDINGENTITYIN"
		, S."TRANSMITTINGCOUNTRY"
		, P.REPORTINGPERIOD
		, S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."DOCTYPEINDIC"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, CASE WHEN S.ETL_RUN_ID = 401884
					AND S.CBCBODYID = 1000001282
					AND S.CBCREPORTID = 1000001289
					THEN 'SE'
				ELSE S."RESCOUNTRYCODE"
			END AS RESCOUNTRYCODE
		, S."PROFITORLOSSCURRCODE"
		, S."PROFITORLOSS"
		, S."TAXPAIDCURRCODE"
		, S."TAXPAID"
		, S."TAXACCRUEDCURRCODE"
		, S."TAXACCRUED"
		, S."CAPITALCURRCODE"
		, S."CAPITAL"
		, S."EARNINGSCURRCODE"
		, S."EARNINGS"
		, S."NBEMPLOYEES"
		, S."ASSETSCURRCODE"
		, S."ASSETS"
		, S."UNRELATEDCURRCODE"
		, S."UNRELATED"
		, S."RELATEDCURRCODE"
		, S."RELATED"
		, S."TOTALCURRCODE"
		, S."TOTAL"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."X_ONTVANGSTDATUMTIJD" AS "START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cbcrepos_sum AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P					-- GOUDVIS
			ON S.MESSAGEREFID = P.MESSAGEREFID
			AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
			AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 12;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_sum AS T,
		DG_I_O_40ANA_CBC.StCBCN_cbcrepos_sum AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P
		SET END_DATE = P.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- 'oude' record identificeren op basis van CorrDocRefId
		WHERE T.DOCREFID = S.CORRDOCREFID				-- update records met DocRefId wat vermeld staat in CorrDocRefId van nieuw bericht
		--AND Coalesce(T.SENDINGENTITYIN, '')  = Coalesce(S.SENDINGENTITYIN, '')
		AND T.REPORTINGENTITYTIN = S.REPORTINGENTITYTIN
		AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
		AND T.ETL_RUN_ID <= S.ETL_RUN_ID				-- correctie moet toegepast worden op oude records
		-- 'geldig tot' bepalen op basis van datum/tijd poort
		AND S.MESSAGEREFID = P.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '')  = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.ETL_RUN_ID = P.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND S.X_OP_TYPE = 'D'
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 13;

		--------------------------------------------------------------------------------------------------------------------------
--/*		 Dit is voorlopig uitgecommenteerd omadat het maakt probleem voor procedure. */
--/*                het moet opgelost worden*/
--/*		-- CBCREPORTS_CONST_ENTITIES*/
--/*		-- Insert nieuwe records (geheel nieuw of als gevolg van update)*/
--/*		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents("MESSAGEREFID", "SENDINGENTITYIN", "TRANSMITTINGCOUNTRY", REPORTINGPERIOD, 					-- GOUDVIS*/
--/*		 		"REPORTINGENTITYTIN", "CBCBODYID",	"CBCREPORTID", "CONSTENTITYID", "DOCTYPEINDIC", "DOCREFID", "CORRDOCREFID",*/
--/*		 		"CORRMESSAGEREFID", "INCORPCOUNTRYCODE",	"OTHERENTITYINFO", "ISSUEDBY", "TIN", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",*/
--/*		 		"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG", COG_RUN_ID)*/
--/*		 SELECT S."MESSAGEREFID"*/
--/*		 , S."SENDINGENTITYIN"*/
--/*		 , S."TRANSMITTINGCOUNTRY"*/
--/*		 , P.REPORTINGPERIOD*/
--/*		 , S."REPORTINGENTITYTIN"*/
--/*		 , S."CBCBODYID"*/
--/*		 , S."CBCREPORTID"*/
--/*		 , S."CONSTENTITYID"*/
--/*		 , S."DOCTYPEINDIC"*/
--/*		 , S."DOCREFID"*/
--/*		 , S."CORRDOCREFID"*/
--/*		 , S."CORRMESSAGEREFID"*/
--/*		 , S."INCORPCOUNTRYCODE"*/
--/*	     , S."OTHERENTITYINFO"*/
--/*		 , S."ISSUEDBY"*/
--/*		 , S."TIN"*/
--/*		 , S."ETL_RUN_ID"*/
--/*		 , S."ETL_STG_TIMESTAMP"*/
--/*		 , 'N' AS "CMG_TD_NEGEER_INDICATIE"*/
--/*		 , NULL AS "CMG_TD_NEGEER_REDEN_CODE"*/
--/*		 , P."X_ONTVANGSTDATUMTIJD" AS "START_DATE"*/
--/*		 , NULL AS "END_DATE"*/
--/*		 , 'Y' AS "CURRENT_FLAG"*/
--/*		 , par_COG_RUN_ID AS COG_RUN_ID*/
--/*		 FROM  DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents AS S*/
--/*		 INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P 					-- GOUDVIS*/
--/*		 	ON S.MESSAGEREFID = P.MESSAGEREFID*/
--/*		 	AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')*/
--/*		 	AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY*/
--/*		 	AND S.ETL_RUN_ID = P.ETL_RUN_ID*/
--/*		 WHERE S.X_OP_TYPE = 'I'*/
--/*		 AND S.ETL_RUN_ID > par_ERI_PROC;*/

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 14;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
			FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE ='D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P			--> MESSAGE_SPEC tabel retourneert tijdstip van ontvangst nieuwe record.
		SET END_DATE = P.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- 'oude'' record identificeren op basis van CorrDocRefId
		WHERE T.DOCREFID = S.CORRDOCREFID				-- update records met DocRefId wat vermeld staat in CorrDocRefId van nieuw bericht
		--AND Coalesce(T.SENDINGENTITYIN, '')  = Coalesce(S.SENDINGENTITYIN, '')
		AND T.REPORTINGENTITYTIN = S.REPORTINGENTITYTIN
		AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
		AND T.ETL_RUN_ID <= S.ETL_RUN_ID				-- correctie moet toegepast worden op oude records
		-- 'geldig tot' bepalen op basis van datum/tijd poort
		AND S.MESSAGEREFID = P.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '')  = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.ETL_RUN_ID = P.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 15;

		-- RESCOUNTRYCODE uit CBCREPORTS_SUMMARY ook in CBCREPORTS_CONST_ENTITIES invoegen. Wordt niet door GegevensOntsluiting meegeleverd
		-- Dit update statement werkt ook als niet ieder land een unieke DOCREFID heeft. Door gebruik van CBCREPORTID is ieder land uniek
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS T
		, DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_sum AS S
		SET RESCOUNTRYCODE = S.RESCOUNTRYCODE
		WHERE T.MESSAGEREFID = S.MESSAGEREFID
		AND Coalesce(T.SENDINGENTITYIN,'') = Coalesce(S.SENDINGENTITYIN,'')
		AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
		AND T.CBCBODYID = S.CBCBODYID
		AND T.CBCREPORTID = S.CBCREPORTID
		AND T.DOCREFID = S.DOCREFID
		AND T.ETL_RUN_ID = S.ETL_RUN_ID
		AND T.RESCOUNTRYCODE IS NULL
		AND T.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 16;

		--------------------------------------------------------------------------------------------------------------------------

		-- CONST_ENTITY_IN
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_in("REPORTINGENTITYTIN", "CBCBODYID", "CBCREPORTID",
			"CONSTENTITYID", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "TIN", "ISSUEDBY", "INTYPE", "IN",
			"VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."CONSTENTITYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."TIN"
		, S."ISSUEDBY"
		, S."INTYPE"
		, S."IN"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.CBCREPORTID, S.CONSTENTITYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cnst_ent_in AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS P		-- Hoofdtabel van Const. Entity voor ophalen tijdstip ontvangst Poort 					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.CBCREPORTID = P.CBCREPORTID
			AND S."CONSTENTITYID" = P."CONSTENTITYID"
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 17;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_in AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
		 	FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE = 'D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		(SELECT DISTINCT MESSAGEREFID, /*SENDINGENTITYIN,*/ TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, DOCREFID, CORRDOCREFID, CBCBODYID, ETL_RUN_ID
		 	FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents) AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 18;

		--------------------------------------------------------------------------------------------------------------------------

		-- CONST_ENTITY_RES_COUNTRY
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_res_cntry("REPORTINGENTITYTIN", "CBCBODYID", "CBCREPORTID", 					-- GOUDVIS
			"CONSTENTITYID", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "TIN", "RESCOUNTRYCODE",
			"VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."CONSTENTITYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."TIN"
		, S."RESCOUNTRYCODE"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.CBCREPORTID, S.CONSTENTITYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cnst_ent_res_cntry AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS P		-- Hoofdtabel van Const. Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, 'x') = Coalesce(P.REPORTINGENTITYTIN, 'x')
			AND S.DOCREFID = P.DOCREFID
			AND Coalesce(S.CORRDOCREFID, 'x') = Coalesce(P.CORRDOCREFID, 'x')
			AND S.CBCBODYID = P.CBCBODYID
			AND S.CBCREPORTID = P.CBCREPORTID
			AND S."CONSTENTITYID" = P."CONSTENTITYID"
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 19;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_res_cntry AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
		 	FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE ='D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		(SELECT DISTINCT MESSAGEREFID, /*SENDINGENTITYIN,*/ TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, DOCREFID, CORRDOCREFID, CBCBODYID, ETL_RUN_ID
		 	FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents) AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 20;

		--------------------------------------------------------------------------------------------------------------------------

		-- CONST_ENTITY_BIZZ_ACTIVITIES
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_biz_acts("REPORTINGENTITYTIN", "CBCBODYID", "CBCREPORTID", 					-- GOUDVIS
			"CONSTENTITYID", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "TIN", "BIZZACTIVITIES",
			"VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."CONSTENTITYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."TIN"
		, S."BIZZACTIVITIES"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.CBCREPORTID, S.CONSTENTITYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cnst_ent_biz_acts AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS P		-- Hoofdtabel van Const. Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.CBCREPORTID = P.CBCREPORTID
			AND S."CONSTENTITYID" = P."CONSTENTITYID"
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 21;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_biz_acts AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
		 	FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE = 'D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		(SELECT DISTINCT MESSAGEREFID, /*SENDINGENTITYIN,*/ TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID
		 	FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents) AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 22;

		--------------------------------------------------------------------------------------------------------------------------

		-- CONST_ENTITY_ADDRESS
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_adrs("REPORTINGENTITYTIN", "CBCBODYID", "CBCREPORTID", 					-- GOUDVIS
			"CONSTENTITYID", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "TIN", "LEGALADDRESSTYPE", "COUNTRYCODE",
			"ADDRESSFREE", "STREET", "BUILDINGIDENTIFIER", "SUITEIDENTIFIER", "FLOORIDENTIFIER", "DISTRICTNAME", "POB",
			"POSTCODE", "CITY", "COUNTRYSUBENTITY", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."CONSTENTITYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."TIN"
		, S."LEGALADDRESSTYPE"
		, S."COUNTRYCODE"
		, S."ADDRESSFREE"
		, S."STREET"
		, S."BUILDINGIDENTIFIER"
		, S."SUITEIDENTIFIER"
		, S."FLOORIDENTIFIER"
		, S."DISTRICTNAME"
		, S."POB"
		, S."POSTCODE"
		, S."CITY"
		, S."COUNTRYSUBENTITY"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.CBCREPORTID, S.CONSTENTITYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cnst_ent_adrs AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS P		-- Hoofdtabel van Const. Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.CBCREPORTID = P.CBCREPORTID
			AND S."CONSTENTITYID" = P."CONSTENTITYID"
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 23;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_adrs AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
		 	FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE = 'D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		(SELECT DISTINCT MESSAGEREFID, /*SENDINGENTITYIN,*/ TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, DOCREFID, CORRDOCREFID, CBCBODYID, ETL_RUN_ID
		 	FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents) AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 24;

		--------------------------------------------------------------------------------------------------------------------------

		-- CONST_ENTITY_NAME
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_name("REPORTINGENTITYTIN", "CBCBODYID", "CBCREPORTID", 					-- GOUDVIS
			"CONSTENTITYID", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID", "TIN", "NAME", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."CBCREPORTID"
		, S."CONSTENTITYID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."TIN"
		, S."NAME"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.CBCREPORTID, S.CONSTENTITYID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_cnst_ent_name AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS P		-- Hoofdtabel van Const. Entity voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.CBCREPORTID = P.CBCREPORTID
			AND S."CONSTENTITYID" = P."CONSTENTITYID"
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 25;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_name AS T,
		-- DISTINCT clausule op source (s) tabel. Moet één DOCREFID retourneren voor records die geüpdate of delete moeten worden. CONST_ENTITIES bevat vaak meerdere entiteiten per land
		(SELECT DISTINCT MESSAGEREFID, SENDINGENTITYIN, TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, CBCBODYID, DOCREFID, CORRDOCREFID, ETL_RUN_ID, X_OP_TYPE
		 	FROM DG_I_O_40ANA_CBC.StCBCN_cbcrepos_cnst_ents WHERE ETL_RUN_ID > par_ERI_PROC AND X_OP_TYPE = 'D' ) AS S,
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		(SELECT DISTINCT MESSAGEREFID, /*SENDINGENTITYIN,*/ TRANSMITTINGCOUNTRY, REPORTINGENTITYTIN, DOCREFID, CORRDOCREFID, CBCBODYID, ETL_RUN_ID
		 	FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents) AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 26;

		--------------------------------------------------------------------------------------------------------------------------
--/*		 deze deel is voorlopig uitgecommenteerd. dit moet opgelost worden.*/
--/*		 -- ADDITIONAL_INFO*/
--/*		 -- Insert nieuwe records (geheel nieuw of als gevolg van update)*/
--/*		 INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_add_info("MESSAGEREFID", "SENDINGENTITYIN", "TRANSMITTINGCOUNTRY", REPORTINGPERIOD, 					-- GOUDVIS*/
--/*		 		"REPORTINGENTITYTIN", "CBCBODYID", "ADINFOID", "DOCTYPEINDIC", "DOCREFID", "CORRDOCREFID", "CORRMESSAGEREFID",*/
--/*		 		"OTHERINFO", "ETL_RUN_ID", "ETL_STG_TIMESTAMP", "CMG_TD_NEGEER_INDICATIE",*/
--/*		 		"CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG", COG_RUN_ID)*/
--/*		 SELECT S."MESSAGEREFID"*/
--/*		 , S."SENDINGENTITYIN"*/
--/*		 , S."TRANSMITTINGCOUNTRY"*/
--/*		 , P.REPORTINGPERIOD*/
--/*		 , S."REPORTINGENTITYTIN"*/
--/*		 , S."CBCBODYID"*/
--/*		 , S."ADINFOID"*/
--/*		 , S."DOCTYPEINDIC"*/
--/*		 , S."DOCREFID"*/
--/*		 , S."CORRDOCREFID"*/
--/*		 , S."CORRMESSAGEREFID"*/
--/*		 , S."OTHERINFO"*/
--/*		 , S."ETL_RUN_ID"*/
--/*		 , S."ETL_STG_TIMESTAMP"*/
--/*		 , 'N' AS "CMG_TD_NEGEER_INDICATIE"*/
--/*		 , NULL AS "CMG_TD_NEGEER_REDEN_CODE"*/
--/*		 , P."X_ONTVANGSTDATUMTIJD" AS "START_DATE"*/
--/*		 , NULL AS "END_DATE"*/
--/*		 , 'Y' AS "CURRENT_FLAG"*/
--/*		 , par_COG_RUN_ID AS COG_RUN_ID*/
--/*		 FROM  "DG_I_P_20GEG_CBCN".ADDITIONAL_INFO AS S*/
--/*		 INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P					-- GOUDVIS*/
--/*		 	ON S.MESSAGEREFID = P.MESSAGEREFID*/
--/*		 	AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')*/
--/*		 	AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY*/
--/*		 	AND S.ETL_RUN_ID = P.ETL_RUN_ID*/
--/*		 WHERE S.X_OP_TYPE = 'I'*/
--/*		 AND S.ETL_RUN_ID > par_ERI_PROC;*/
--/**/
--/*		 SET par_ACT_INS = par_ACT_INS + Activity_Count;*/
--/*		 SET par_STEP = 27;*/

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_add_info AS T,
		(SELECT DISTINCT ETL_RUN_ID, CBCBODYID, TRANSMITTINGCOUNTRY, SENDINGENTITYIN, REPORTINGENTITYTIN, MESSAGEREFID, CORRDOCREFID
			FROM DG_I_O_40ANA_CBC.StCBCN_add_info
			WHERE X_OP_TYPE = 'D' AND ETL_RUN_ID > par_ERI_PROC)  AS S,					-- DISTINCT clausule toepassen om unieke CORRDOCREFID te genereren als input
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS P
		SET END_DATE = P.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- 'oude'' record identificeren op basis van CorrDocRefId
		WHERE T.DOCREFID = S.CORRDOCREFID				-- update records met DocRefId wat vermeld staat in CorrDocRefId van nieuw bericht
		--AND Coalesce(T.SENDINGENTITYIN, '')  = Coalesce(S.SENDINGENTITYIN, '')
		AND T.REPORTINGENTITYTIN = S.REPORTINGENTITYTIN
		AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY
		AND T.ETL_RUN_ID <= S.ETL_RUN_ID				-- correctie moet toegepast worden op oude records
		-- 'geldig tot' bepalen op basis van datum/tijd poort
		AND S.MESSAGEREFID = P.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '')  = Coalesce(P.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.ETL_RUN_ID = P.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 28;

		--------------------------------------------------------------------------------------------------------------------------

		-- ADDITIONAL_INFO_RES_COUNTRY
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_add_info_res_cntry("REPORTINGENTITYTIN", "CBCBODYID",  "ADINFOID", "DOCREFID", 					-- GOUDVIS
			"CORRDOCREFID", "CORRMESSAGEREFID", "RESCOUNTRYCODE", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."ADINFOID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."RESCOUNTRYCODE"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.ADINFOID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_add_info_res_cntry AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_add_info AS P		-- Hoofdtabel van Additional Info voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ADINFOID = P.ADINFOID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID > par_ERI_PROC;

		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 29;

		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_add_info_res_cntry AS T,
		(SELECT DISTINCT ETL_RUN_ID, CBCBODYID, TRANSMITTINGCOUNTRY, SENDINGENTITYIN, REPORTINGENTITYTIN, MESSAGEREFID, CORRDOCREFID
			FROM DG_I_O_40ANA_CBC.StCBCN_add_info
			WHERE X_OP_TYPE = 'D' AND ETL_RUN_ID > par_ERI_PROC)  AS S,					-- DISTINCT clausule toepassen om unieke CORRDOCREFID te genereren als input
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_add_info AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';

		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 30;

		--------------------------------------------------------------------------------------------------------------------------

		-- ADDITIONAL_INFO_SUMMARY_REF
		-- Insert nieuwe records (geheel nieuw of als gevolg van update)
		INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_add_info_sum_ref("REPORTINGENTITYTIN", "CBCBODYID",  "ADINFOID", "DOCREFID", 					-- GOUDVIS
			"CORRDOCREFID", "CORRMESSAGEREFID", "SUMMARYREF", "VOLGNR", "VOLGNR_COG", "ETL_RUN_ID", "ETL_STG_TIMESTAMP",
			"CMG_TD_NEGEER_INDICATIE", "CMG_TD_NEGEER_REDEN_CODE", "START_DATE", "END_DATE", "CURRENT_FLAG")
		SELECT S."REPORTINGENTITYTIN"
		, S."CBCBODYID"
		, S."ADINFOID"
		, S."DOCREFID"
		, S."CORRDOCREFID"
		, S."CORRMESSAGEREFID"
		, S."SUMMARYREF"
		, S."VOLGNR"
		, Rank() Over (PARTITION BY S.REPORTINGENTITYTIN, S.CBCBODYID, S.ADINFOID, S.DOCREFID, S.ETL_RUN_ID ORDER BY S.VOLGNR) AS "VOLGNR_COG"
		, S."ETL_RUN_ID"
		, S."ETL_STG_TIMESTAMP"
		, 'N' AS "CMG_TD_NEGEER_INDICATIE"
		, NULL AS "CMG_TD_NEGEER_REDEN_CODE"
		, P."START_DATE"
		, NULL AS "END_DATE"
		, 'Y' AS "CURRENT_FLAG"
		FROM  DG_I_O_40ANA_CBC.StCBCN_add_info_sum_ref AS S
		INNER JOIN DG_I_O_40ANA_CBC.DpCBCD_add_info AS P		-- Hoofdtabel van Additional Info voor ophalen tijdstip ontvangst Poort					-- GOUDVIS
			ON Coalesce(S.REPORTINGENTITYTIN, '') = Coalesce(P.REPORTINGENTITYTIN, '')
			AND S.DOCREFID = P.DOCREFID
			AND S.CBCBODYID = P.CBCBODYID
			AND S.ADINFOID = P.ADINFOID
			AND S.ETL_RUN_ID = P.ETL_RUN_ID
		WHERE S.X_OP_TYPE = 'I'
		AND S.ETL_RUN_ID  > par_ERI_PROC;
		
		SET par_ACT_INS = par_ACT_INS + Activity_Count;
		SET par_STEP = 31;
		
		-- Deativeren van records als gevolg van terugtrekken data (DocTypeIndic = OECD3, X_OP_TYPE = D)
		-- versie 2: SENDINGENTITYIN verwijderen uit JOIN tussen oude en nieuwe bericht (kan alleen als TIN ook in join zit)
		UPDATE T
		FROM DG_I_O_40ANA_CBC.DpCBCD_add_info_sum_ref AS T,
		(SELECT DISTINCT ETL_RUN_ID, CBCBODYID, TRANSMITTINGCOUNTRY, SENDINGENTITYIN, REPORTINGENTITYTIN, MESSAGEREFID, CORRDOCREFID
			FROM DG_I_O_40ANA_CBC.StCBCN_add_info
			WHERE X_OP_TYPE = 'D' AND ETL_RUN_ID > par_ERI_PROC)  AS S,					-- DISTINCT clausule toepassen om unieke CORRDOCREFID te genereren als input
		DG_I_O_40ANA_CBC.DpCBCD_msg_spec AS M,
		DG_I_O_40ANA_CBC.DpCBCD_add_info AS P
		SET END_DATE = M.X_ONTVANGSTDATUMTIJD - INTERVAL '1' SECOND
		, CURRENT_FLAG = 'N'
		-- Koppelen bron view aan message_spec tabel in 30-laag voor ophalen X_ONTVANGSTDATUMTIJD
		WHERE S.MESSAGEREFID = M.MESSAGEREFID
		AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(M.SENDINGENTITYIN, '')
		AND S.TRANSMITTINGCOUNTRY = M.TRANSMITTINGCOUNTRY
		-- Koppelen update hoofdtabel aan historische hoofdtabel
		--AND Coalesce(S.SENDINGENTITYIN, '') = Coalesce(P.SENDINGENTITYIN, '')
		AND S.REPORTINGENTITYTIN = P.REPORTINGENTITYTIN
		AND S.TRANSMITTINGCOUNTRY = P.TRANSMITTINGCOUNTRY
		AND S.CORRDOCREFID = P.DOCREFID
		AND S.ETL_RUN_ID >= P.ETL_RUN_ID
		-- koppelen hoofdtabel historie aan detailtabel historie
		AND P.DOCREFID = T.DOCREFID
		AND Coalesce(P.CORRDOCREFID, '') = Coalesce(T.CORRDOCREFID, '')
		AND P.CBCBODYID = T.CBCBODYID
		AND P.ETL_RUN_ID = T.ETL_RUN_ID
		-- SELECTIECRITERIA
		AND T.END_DATE IS NULL
		AND T.CURRENT_FLAG = 'Y';
		
		SET par_ACT_UPD = par_ACT_UPD + Activity_Count;
		SET par_STEP = 32;

		-------------------------------------------------------------------------------------------------------------------
/*		
		-- STATUSMESSAGE
		-- Insert records. Komen geen updates op eerdere fouten dus alleen INSERTS. 
		
		INSERT INTO DG_I_O_40ANA_CBC.STATUSMESSAGE(X_OP_TYPE, X_USER, MESSAGEREFID, ERRORPATH, "ERRORCODE", ERRORDETAILS,
					STATUS, VALIDATEDBY, DOCREFIDINERROR, ETL_SRC_STM_CDE, ETL_CHG_IND, ETL_RUN_ID, ETL_REJ_IND, ETL_STG_TIMESTAMP, 
					ETL_SEQ_ID, ETL_TD_TIMESTAMP, ETL_TD_NEGEER_INDICATIE, ETL_TD_NEGEER_REDEN_CODE)
		SELECT S.X_OP_TYPE
		, S.X_USER
		, S.MESSAGEREFID
		, S.ERRORPATH
		, S."ERRORCODE"
		, S.ERRORDETAILS
		, S.STATUS
		, S.VALIDATEDBY
		, S.DOCREFIDINERROR
		, S.ETL_SRC_STM_CDE
		, S.ETL_CHG_IND
		, S.ETL_RUN_ID
		, S.ETL_REJ_IND
		, S.ETL_STG_TIMESTAMP
		, S.ETL_SEQ_ID
		, S.ETL_TD_TIMESTAMP
		, S.ETL_TD_NEGEER_INDICATIE
		, S.ETL_TD_NEGEER_REDEN_CODE
		FROM DG_I_O_40ANA_CBC.StCBCN_statusmsg AS S
		WHERE S.ETL_RUN_ID  > par_ERI_PROC;
		
		SET par_ACT_INS = par_ACT_INS + ACTIVITY_COUNT;
	*/	
	--------------------------------------------------------------------------------------------------------------------------
	
	-- END TRANSACTION: tot hier wordt alles teruggedraaid als iets fout gaat
	END;
	
	-- Ophalen hoogste ETL_RUN_ID wat verwerkt is. Geeft zelfde ETL_RUN_ID als MIH geen run gedraaid heeft na laatste keer dat deze job uitgevoerd is.
	-- Als procedure is fout gegaan is max ETL_RUN_ID = 0. Dit wordt gevuld in de Handlers en bereikt dit punt niet.
	SELECT Coalesce(Max("ETL_RUN_ID"),NULL) INTO par_MAX_ETL_RUN_ID
	FROM DG_I_O_40ANA_CBC.DpCBCD_msg_spec
	WHERE TRANSMITTINGCOUNTRY = 'NL';
	
	-- Wegschrijven naar RUNCONTROL_30 tabel dat procedure succesvol is voltooid
	UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30
		SET END_DATE =  Current_Timestamp
		, RUN_RESULT = 'Success'
		, RUN_COMMENT = Coalesce(RUN_COMMENT, '') || Trim(Cast(par_ACT_INS AS VARCHAR(11))) || ' records inserted; ' || Trim(Cast(par_ACT_UPD - par_ZERO_ROWS AS VARCHAR(11))) || ' records updated.'
		, ETL_RUN_ID_NAT = par_MAX_ETL_RUN_ID
		WHERE COG_RUN_ID = par_COG_RUN_ID
		AND PROCEDURE_NUMBER = par_PROC_NR
		AND PROCEDURE_NAME = 'PROC_PROCESS_DELTAS_NAT';
	
	SET par_STATUS = 0;

END;