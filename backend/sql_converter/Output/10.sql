CREATE OR REPLACE PROCEDURE DG_I_O_40ANA_CBC.PROC_VULLEN_BVR_VERRIJKING_INT( 
 IN par_COG_RUN_ID INTEGER, 
 IN par_ETL_RUN_ID_INT INTEGER, 
 IN par_PROC_NR INTEGER, 
 OUT par_Status INTEGER) 
 LANGUAGE SQL
 BEGIN 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 DECLARE par_ZERO_ROWS, par_MAX_ETL_RUN_ID_INT, par_MAX_ETL_RUN_ID_NAT, par_ACT_CNT, par_ACT_UPD, par_STEP INTEGER DEFAULT 0; 
 DECLARE par_SQLSTATE CHARACTER(5); 
 DECLARE par_SQLMSG VARCHAR(118);
     DECLARE done INT DEFAULT 0; 
 
 
 
 DECLARE EXIT HANDLER FOR SQLEXCEPTION 
 BEGIN 
 
 
 
 
 GET DIAGNOSTICS EXCEPTION 1 par_SQLMSG = MESSAGE_TEXT; 
 
 
 ROLLBACK; 
 
 UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = COALESCE(RUN_COMMENT, '') || 'SQLEXCEPTION after step ' || TRIM(par_STEP) || ': ' || par_SQLMSG || '; ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_VULLEN_BVR_VERRIJKING_INT'; 
 
 SET par_STATUS = 1; 
 END; 
 
 
 DECLARE CONTINUE HANDLER FOR SQLSTATE 'T5860' 
 BEGIN 
 
 END; 
 
 
 DECLARE EXIT HANDLER FOR SQLWARNING 
 BEGIN 
 
 SET par_SQLSTATE = SqlState; 
 
 
 ROLLBACK; 
 
 UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = COALESCE(RUN_COMMENT, '') || 'SQLWARNING sqlstate: ' || par_SQLSTATE || ' after step ' || TRIM(par_STEP) || '; ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_VULLEN_BVR_VERRIJKING_INT'; 
 
 SET par_STATUS = 1; 
 END; 
 
 
 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' 
 BEGIN 
 
 
 SET par_ZERO_ROWS = par_ZERO_ROWS + 1; 
 
 UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 
 SET RUN_COMMENT = ' 0 rows updated for ' || CAST(par_ZERO_ROWS AS VARCHAR(2)) || ' queries; ' 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_VULLEN_BVR_VERRIJKING_INT'; 
 END; 
 
 
 DECLARE EXIT HANDLER FOR NOT FOUND 
 BEGIN 
 
 SET par_SQLSTATE = SqlState; 
 
 
 ROLLBACK; 
 
 UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'ERROR' 
 , RUN_COMMENT = COALESCE(RUN_COMMENT, '') || 'SQL NOT FOUND sqlstate: ' || par_SQLSTATE || ' after step ' || TRIM(par_STEP) || '; ' 
 , ETL_RUN_ID_INT = 0 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_VULLEN_BVR_VERRIJKING_INT'; 
 
 SET par_STATUS = 1; 
 END; 
 
 
 
 INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 ( 
 COG_RUN_ID 
 , PROCEDURE_NUMBER 
 , PROCEDURE_NAME 
 , START_DATE) 
 VALUES (par_COG_RUN_ID, par_PROC_NR, 'PROC_VULLEN_BVR_VERRIJKING_INT', CURRENT TIMESTAMP); 
 
 
 BEGIN 
 
 
 
 DELETE 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr 
 WHERE TRANSMITTINGCOUNTRY <> 'NL' 
 AND ETL_RUN_ID > par_ETL_RUN_ID_INT; 
 
 
 
 
 INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_entn_bvr( 
 MESSAGEREFID 
 , SENDINGENTITYIN 
 , TRANSMITTINGCOUNTRY 
 , REPORTINGENTITYTIN 
 , RE_NAME_KEY 
 ,REPORTINGPERIOD 
 , CBCBODYID 
 , DOCREFID 
 , "RE/CE" 
 , TIN 
 , TIN_CLEAN 
 , ENTITY_NAME 
 , ETL_RUN_ID 
 , COG_RUN_ID) 
 
 SELECT 
 A.MESSAGEREFID, 
 A.SENDINGENTITYIN, 
 A.TRANSMITTINGCOUNTRY, 
 A.REPORTINGENTITYTIN, 
 A.RE_NAME_KEY, 
 A.REPORTINGPERIOD, 
 A.CBCBODYID, 
 A.DOCREFID, 
 A."RE/CE", 
 A.TIN, 
 
 CASE 
 
 WHEN Length(A.TIN_CL) >= 11 AND LOCATE('NL', A.TIN_CL) > 0 THEN SUBSTR(A.TIN_CL, RegExp_Instr(A.TIN_CL, 'NL', 1,1,1), 9) 
 
 WHEN Length(A.TIN_CL) >= 12 AND LOCATE('B', A.TIN_CL) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, 'B', 9, 1)-9, 9) 
 
 WHEN Length(A.TIN_CL) >= 10 AND LOCATE('V', A.TIN_CL) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, 'V', 9, 1)-9, 9) 
 
 WHEN Length(A.TIN_CL) >= 10 AND LOCATE('L0', A.TIN_CL) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, 'L0', 9, 1)-9, 9) 
 
 WHEN Length(A.TIN_CL) = 11 AND SUBSTR(A.TIN_CL,1,2) = '00' THEN SUBSTR(A.TIN_CL, 3, 9) 
 
 WHEN Length(A.TIN_CL) = 9 AND SUBSTR(A.TIN_CL,1,1) = '8' THEN A.TIN_CL 
 
 WHEN Length(A.TIN_CL) = 9 AND SUBSTR(A.TIN_CL,1,2) = '00' THEN A.TIN_CL 
 
 WHEN Length(A.TIN_CL) = 8 AND SUBSTR(A.TIN_CL,1,1) = '0' THEN LPad(A.TIN_CL, 9, '0') 
 
 WHEN Length(A.TIN_CL) = 7 THEN LPad(A.TIN_CL, 9, '0') 
 
 
 WHEN Length(A.TIN) = 11 AND SUBSTR(A.TIN, 10, 2) = '.0' AND A.TRANSMITTINGCOUNTRY = 'AT' THEN SUBSTR(A.TIN, 1,9) 
 
 WHEN Length(A.TIN) = 9 AND SUBSTR(A.TIN, 8, 2) = '.0' AND A.TRANSMITTINGCOUNTRY = 'AT' THEN '00' || SUBSTR(A.TIN, 1,7) 
 
 WHEN Length(A.TIN_CL) >= 10 AND LOCATE('FU:', A.TIN_CL) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, 'FU:', 9, 1)-9, 9) 
 
 WHEN Length(A.TIN_CL) >= 10 AND LOCATE('(', A.TIN_CL) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, '(', 9, 1)-9, 9) 
 
 WHEN Length(A.TIN_CL) >= 12 AND Instr(A.TIN_CL, 'B', 9, 1) > 9 THEN SUBSTR(A.TIN_CL, Instr(A.TIN_CL, 'B', 9, 1)-9, 9) 
 ELSE NULL 
 END AS TIN_CLEAN, 
 A.ENTITY_NAME, 
 A.ETL_RUN_ID, 
 A.COG_RUN_ID 
 FROM ( 
    select
    RE.MESSAGEREFID,
                RE.SENDINGENTITYIN,
                RE.TRANSMITTINGCOUNTRY,
                RE.TIN AS REPORTINGENTITYTIN,
                RE.RE_NAME_KEY,
                RE.REPORTINGPERIOD,
                RE.CBCBODYID,
                RE.DOCREFID,
                'RE' AS "RE/CE",
                RE.TIN,
                Replace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(RE.TIN, ' ', NULL), '.', NULL), '''', NULL), '-', NULL), '#', NULL), '"', NULL), ',', NULL), ':', NULL), 'RSIN', NULL), 'N ', NULL), ' ', NULL) AS TIN_CL -- Versie 8: #, ',' en " toegevoegd
             
 , 
 REN."NAME" AS ENTITY_NAME, 
 RE.ETL_RUN_ID, 
 par_COG_RUN_ID AS COG_RUN_ID 
 FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent AS RE 
 LEFT OUTER JOIN ( 
 SELECT "NAME", 
 REPORTINGENTITYTIN, 
 CBCBODYID, 
 DOCREFID, 
 ETL_RUN_ID 
 FROM DG_I_O_40ANA_CBC.DpCBCD_repo_ent_name 
 WHERE VOLGNR_COG = 1) AS REN 
 ON RE.DOCREFID = REN.DOCREFID 
 AND RE.CBCBODYID = REN.CBCBODYID 
 AND RE.TIN = REN.REPORTINGENTITYTIN 
 AND RE.ETL_RUN_ID = REN.ETL_RUN_ID 
 WHERE RE.TRANSMITTINGCOUNTRY <> 'NL' 
 AND RE.ETL_RUN_ID > par_ETL_RUN_ID_INT 
 AND RE.ISSUEDBY = 'NL' 
 AND RE.TIN <> 'NOTIN' 
 ) AS A; 
 
 SET par_ACT_CNT = Activity_Count; 
 SET par_STEP = 1; 
 
 
 
 
 
 INSERT INTO DG_I_O_40ANA_CBC.DpCBCD_entn_bvr( 
 MESSAGEREFID 
 , SENDINGENTITYIN 
 , TRANSMITTINGCOUNTRY 
 , REPORTINGENTITYTIN 
 , RE_NAME_KEY 
 , REPORTINGPERIOD 
 , CBCBODYID 
 , DOCREFID 
 , "RE/CE" 
 , TIN 
 , TIN_CLEAN 
 , ENTITY_NAME 
 , ETL_RUN_ID 
 , COG_RUN_ID) 
 
 SELECT 
 B.MESSAGEREFID, 
 B.SENDINGENTITYIN, 
 B.TRANSMITTINGCOUNTRY, 
 B.REPORTINGENTITYTIN, 
 B.RE_NAME_KEY, 
 B.REPORTINGPERIOD, 
 B.CBCBODYID, 
 B.DOCREFID, 
 B."RE/CE", 
 B.TIN, 
 
 CASE 
 
 WHEN Length(B.TIN_CL) >= 11 AND LOCATE('NL', B.TIN_CL) > 0 THEN SUBSTR(B.TIN_CL, RegExp_Instr(B.TIN_CL, 'NL', 1,1,1), 9) 
 
 WHEN Length(B.TIN_CL) >= 12 AND LOCATE('B', B.TIN_CL) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, 'B', 9, 1)-9, 9) 
 
 WHEN Length(B.TIN_CL) >= 10 AND LOCATE('V', B.TIN_CL) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, 'V', 9, 1)-9, 9) 
 
 WHEN Length(B.TIN_CL) >= 10 AND LOCATE('L0', B.TIN_CL) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, 'L0', 9, 1)-9, 9) 
 
 WHEN Length(B.TIN_CL) = 11 AND SUBSTR(B.TIN_CL,1,2) = '00' THEN SUBSTR(B.TIN_CL, 3, 9) 
 
 WHEN Length(B.TIN_CL) = 9 AND SUBSTR(B.TIN_CL,1,1) = '8' THEN B.TIN_CL 
 
 WHEN Length(B.TIN_CL) = 9 AND SUBSTR(B.TIN_CL,1,2) = '00' THEN B.TIN_CL 
 
 WHEN Length(B.TIN_CL) = 8 AND SUBSTR(B.TIN_CL,1,1) = '0' THEN LPad(B.TIN_CL, 9, '0') 
 
 WHEN Length(B.TIN_CL) = 7 THEN LPad(B.TIN_CL, 9, '0') 
 
 
 WHEN Length(B.TIN) = 11 AND SUBSTR(B.TIN, 10, 2) = '.0' AND B.TRANSMITTINGCOUNTRY = 'AT' THEN SUBSTR(B.TIN, 1,9) 
 
 WHEN Length(B.TIN) = 9 AND SUBSTR(B.TIN, 8, 2) = '.0' AND B.TRANSMITTINGCOUNTRY = 'AT' THEN '00' || SUBSTR(B.TIN, 1,7) 
 
 WHEN Length(B.TIN_CL) >= 10 AND LOCATE('FU:', B.TIN_CL) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, 'FU:', 9, 1)-9, 9) 
 
 WHEN Length(B.TIN_CL) >= 10 AND LOCATE('(', B.TIN_CL) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, '(', 9, 1)-9, 9) 
 
 WHEN Length(B.TIN_CL) >= 12 AND Instr(B.TIN_CL, 'B', 9, 1) > 9 THEN SUBSTR(B.TIN_CL, Instr(B.TIN_CL, 'B', 9, 1)-9, 9) 
 ELSE NULL 
 END AS TIN_CLEAN, 
 B.ENTITY_NAME, 
 B.ETL_RUN_ID, 
 B.COG_RUN_ID 
 FROM (     
            SELECT DISTINCT 
                CE.MESSAGEREFID,
                CE.SENDINGENTITYIN,
                CE.TRANSMITTINGCOUNTRY,
                CE.REPORTINGENTITYTIN,
                CE.RE_NAME_KEY,
                CE.REPORTINGPERIOD,
                CE.CBCBODYID,
                CE.DOCREFID,
                'CE' AS "RE/CE",
                CE.TIN,
                Replace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(OReplace(CE.TIN, ' ', NULL), '.', NULL), '''', NULL), '-', NULL), '#', NULL), '"', NULL), ',', NULL), ':', NULL), 'RSIN', NULL), 'N ', NULL), ' ', NULL) AS TIN_CL -- Versie 8: #, ',' en " toegevoegd
                
 , 
 RCN."NAME" AS ENTITY_NAME, 
 CE.ETL_RUN_ID, 
 par_COG_RUN_ID AS COG_RUN_ID 
 FROM DG_I_O_40ANA_CBC.DpCBCD_cbcrepos_cnst_ents AS CE 
 LEFT OUTER JOIN ( 
 SELECT "NAME", 
 CBCBODYID, 
 CBCREPORTID, 
 CONSTENTITYID, 
 DOCREFID, 
 TIN, 
 ETL_RUN_ID 
 FROM DG_I_O_40ANA_CBC.DpCBCD_cnst_ent_name 
 WHERE VOLGNR_COG = 1) AS RCN 
 ON CE.CBCBODYID = RCN.CBCBODYID 
 AND CE.CBCREPORTID = RCN.CBCREPORTID 
 AND CE.CONSTENTITYID = RCN.CONSTENTITYID 
 AND CE.DOCREFID = RCN.DOCREFID 
 AND CE.TIN = RCN.TIN 
 AND CE.ETL_RUN_ID = RCN.ETL_RUN_ID 
 WHERE (( CE.TRANSMITTINGCOUNTRY <> 'NL' 
 AND CE.ETL_RUN_ID > par_ETL_RUN_ID_INT 
 AND CE.ISSUEDBY = 'NL') 
 
 
 OR (CE.TRANSMITTINGCOUNTRY <> 'NL' 
 AND CE.RESCOUNTRYCODE = 'NL' 
 AND (CE.ISSUEDBY <> 'NL' OR CE.ISSUEDBY IS NULL) 
 AND CE.ETL_RUN_ID > par_ETL_RUN_ID_INT)) 
 AND CE.TIN <> 'NOTIN' 
 AND CE.TIN <> 'NO TIN' 
 ) AS B; 
 
 SET par_ACT_CNT = par_ACT_CNT + Activity_Count; 
 SET par_STEP = 2; 
 
 
 
 
 
 
 UPDATE T 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr AS T, 
 ( 
 SELECT 
 DISTINCT DT.TRANSMITTINGCOUNTRY, 
 DT.MESSAGEREFID, 
 DT.ETL_RUN_ID, 
 DT.CBCBODYID, 
 DT.Datum, 
 DT.TIN_CLEAN, 
 DT.FINR 
 , 
 A.NAAM, 
 B.RELSRTCD, 
 B.DOSNR, 
 C.DOSNAAM, 
 C.DOSTEAM 
 , 
 C.BRANCHE, 
 E.OMSCHR, 
 D.KANTNM, 
 F.ONDERNCD 
 FROM 
 
 
 ( 
 SELECT 
 TRANSMITTINGCOUNTRY, 
 MESSAGEREFID, 
 ETL_RUN_ID, 
 CBCBODYID, 
 REPORTINGPERIOD AS Datum, 
 TIN_CLEAN, 
 CAST(TIN_CLEAN AS INT) AS FINR 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr 
 WHERE RegExp_Similar(TIN_CLEAN, '.*\d{9}.*') = 1 
 AND TIN_CLEAN IS NOT NULL 
 
 AND TIN_CLEAN NOT IN ('819853203','859840827','818146254','819175225','808927267','810593932','810670343','859113036','821041460','003202665','805111451','818220594','805046987','823495656','812046328','819863634','809377950','809377950','859770539','859763250','005887240','810632111','861123116','818146266','859764023','859840773','850530635','002201847','819853148','858284121','812046328','852957579','805107721','811101307','810670422','859772986','861188299','804315589','859768272','819853215','859773334','800203823','851727049','801813566') 
 
 AND TIN_CLEAN NOT IN ('003252486', '853048836', '857497339', '855670149', '853372809', '859409533', '862073637', '001132726', '821203320', '001190994', '007560394', '818916084', '856049232', '852915044', '800633544', '851425999', '008383029', '855599327', '821454651', '801356192', '819863634', '002976043', '004143930') 
 AND BVR_DOSNR IS NULL) AS DT 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_persr_filt AS A 
 ON DT.FINR = A.FINR 
 AND DT.Datum >= A.INGDAT 
 AND DT.Datum < A.VERVDAT 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_ecorel_filt AS B 
 ON A.FINR = B.FINR 
 AND DT.Datum >= B.INGDAT 
 AND DT.Datum < B.VERVDAT 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_eco_filt AS C 
 ON B.DOSNR = C.DOSNR 
 AND DT.Datum >= C.INGDAT 
 AND DT.Datum < C.VERVDAT 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC_INPUT.BVR_KANTOOR AS D 
 ON C.KANTID = D.KANTID 
 AND DT.Datum >= D.INGDAT 
 AND DT.Datum < D.VERVDAT 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC_INPUT.BVR_BRANCHE AS E 
 ON C.BRANCHE = E.BRANCHECD 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_vpbaktiv_filt AS F 
 ON DT.FINR = F.FINR 
 AND DT.Datum >= F.INGDAT 
 AND DT.Datum < F.VERVDAT) AS S 
 SET BVR_ENTITEIT_NAAM = S.NAAM 
 , BVR_RELSRTCD = S.RELSRTCD 
 , BVR_DOSNR = S.DOSNR 
 , BVR_DOSNAAM = S.DOSNAAM 
 , BVR_DOSTEAM = S.DOSTEAM 
 
 , BVR_BRANCHE_OMSCHR = S.OMSCHR 
 , BVR_KANTNM = S.KANTNM 
 , BVR_ONDERNCD = S.ONDERNCD 
 WHERE T.REPORTINGPERIOD = S.Datum 
 AND T.TIN_CLEAN = S.TIN_CLEAN 
 AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY 
 AND T.MESSAGEREFID = S.MESSAGEREFID 
 AND T.ETL_RUN_ID = S.ETL_RUN_ID 
 AND T.CBCBODYID = S.CBCBODYID 
 AND S.DOSNR IS NOT NULL 
 
 
 AND S.ETL_RUN_ID > 2049572 
 AND T.BVR_DOSNR IS NULL; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 3; 
 
 
 
 UPDATE T 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr AS T, 
 ( 
 SELECT 
 DISTINCT DT.TRANSMITTINGCOUNTRY, 
 DT.MESSAGEREFID, 
 DT.ETL_RUN_ID, 
 DT.CBCBODYID, 
 DT.Datum, 
 DT.TIN_CLEAN, 
 DT.FINR, 
 A.NAAM, 
 B.RELSRTCD, 
 B.DOSNR, 
 C.DOSNAAM, 
 C.DOSTEAM, 
 C.BRANCHE, 
 E.OMSCHR, 
 D.KANTNM, 
 F.ONDERNCD 
 FROM 
 
 
 ( 
 SELECT 
 TRANSMITTINGCOUNTRY, 
 MESSAGEREFID, 
 ETL_RUN_ID, 
 CBCBODYID, 
 REPORTINGPERIOD AS Datum, 
 TIN_CLEAN, 
 CAST(TIN_CLEAN AS INT) AS FINR 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr 
 WHERE RegExp_Similar(TIN_CLEAN, '.*\d{9}.*') = 1 
 AND TIN_CLEAN IS NOT NULL 
 AND BVR_ENTITEIT_NAAM IS NOT NULL 
 AND BVR_DOSNR IS NULL) AS DT 
 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_persr_filt_finr_uniq AS A 
 ON DT.FINR = A.FINR 
 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_ecorel_filt_finr_uniq AS B 
 ON A.FINR = B.FINR 
 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_eco_filt_dosnr_uniq AS C 
 ON B.DOSNR = C.DOSNR 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC_INPUT.BVR_KANTOOR AS D 
 ON C.KANTID = D.KANTID 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC_INPUT.BVR_BRANCHE AS E 
 ON C.BRANCHE = E.BRANCHECD 
 
 LEFT OUTER JOIN DG_I_O_40ANA_CBC.DpCBCV_bvr_vpbaktiv_filt_finr_uniq AS F 
 ON DT.FINR = F.FINR) AS S 
 SET 
 BVR_RELSRTCD = S.RELSRTCD 
 , BVR_DOSNR = S.DOSNR 
 , BVR_DOSNAAM = S.DOSNAAM 
 , BVR_DOSTEAM = S.DOSTEAM 
 , BVR_BRANCHE_OMSCHR = S.OMSCHR 
 , BVR_KANTNM = S.KANTNM 
 , BVR_ONDERNCD = S.ONDERNCD 
 WHERE T.REPORTINGPERIOD = S.Datum 
 AND T.TIN_CLEAN = S.TIN_CLEAN 
 AND T.TRANSMITTINGCOUNTRY = S.TRANSMITTINGCOUNTRY 
 AND T.MESSAGEREFID = S.MESSAGEREFID 
 AND T.ETL_RUN_ID = S.ETL_RUN_ID 
 AND T.CBCBODYID = S.CBCBODYID 
 AND T.BVR_DOSNR IS NULL; 
 
 SET par_ACT_UPD = par_ACT_UPD + Activity_Count; 
 SET par_STEP = 4; 
 
 
 END; 
 IF par_ACT_CNT > 0 THEN 
 
 
 SELECT COALESCE(MAX(ETL_RUN_ID),NULL) INTO par_MAX_ETL_RUN_ID_INT 
 FROM DG_I_O_40ANA_CBC.DpCBCD_entn_bvr 
 WHERE TRANSMITTINGCOUNTRY <> 'NL'; 
 ELSE 
 SET par_MAX_ETL_RUN_ID_NAT = NULL; 
 END IF; 
 
 
 UPDATE DG_I_O_40ANA_CBC.DpCBCD_runcontrol_30 
 SET END_DATE = CURRENT TIMESTAMP 
 , RUN_RESULT = 'Success' 
 , RUN_COMMENT = 
 CASE 
 WHEN par_ACT_CNT = 0 THEN 'No new records to process' ELSE TRIM(CAST(par_ACT_CNT AS VARCHAR(11))) || 'records inserted; ' || TRIM(CAST(par_ACT_UPD - par_ZERO_ROWS AS VARCHAR(11))) || ' records updated.' 
 END 
 , ETL_RUN_ID_INT = par_MAX_ETL_RUN_ID_INT 
 WHERE COG_RUN_ID = par_COG_RUN_ID 
 AND PROCEDURE_NUMBER = par_PROC_NR 
 AND PROCEDURE_NAME = 'PROC_VULLEN_BVR_VERRIJKING_INT'; 
 
 SET par_STATUS = 0; 
 END@
